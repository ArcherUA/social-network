version: '3'
services:
  api_gateway:
    image: 'registry.gitlab.com/devs.stargazer/videoconvertor/gateway:latest'
    container_name: api_gateway
    hostname: api_gateway
    env_file: .env
    volumes:
      - './api-gateway:/var/www/api'
      - './api-gateway/socket-tester.js:/var/www/api/socket-tester.js'
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - '${API_GATEWAY_PORT}:${API_GATEWAY_PORT}'
      - '${WEBSOCKET_PORT}:${WEBSOCKET_PORT}'
  messages_service:
    image: 'registry.gitlab.com/devs.stargazer/videoconvertor/gateway:latest'
    container_name: messages_service
    hostname: messages_service
    env_file: .env
    volumes:
      - './messages-service:/var/www/api'
    build:
      context: .
      dockerfile: ./messages-service/Dockerfile
    ports:
      - '${MESSAGES_SERVICE_PORT}:${MESSAGES_SERVICE_PORT}'
    depends_on:
      - messages_db
  users_service:
    image: 'registry.gitlab.com/devs.stargazer/videoconvertor/gateway:latest'
    container_name: users_service
    hostname: users_service
    env_file: .env
    volumes:
      - './users-service:/var/www/api'
    build:
      context: .
      dockerfile: ./users-service/Dockerfile
    ports:
      - '${USERS_SERVICE_PORT}:${USERS_SERVICE_PORT}'
    depends_on:
      - users_db
  posts_service:
    image: 'registry.gitlab.com/devs.stargazer/videoconvertor/gateway:latest'
    container_name: posts_service
    hostname: posts_service
    env_file: .env
    volumes:
      - './posts-service:/var/www/api'
    build:
      context: .
      dockerfile: ./posts-service/Dockerfile
    ports:
      - '${POSTS_SERVICE_PORT}:${POSTS_SERVICE_PORT}'
    depends_on:
      - posts_db
  rabbitmq_server:
    container_name: rabbitmq_server
    hostname: rabbitmq_server
    image: 'bitnami/rabbitmq:latest'
    ports:
      - '4369:4369'
      - '5672:5672'
      - '15672:15672'
      - '25672:25672'
      - '35197:35197'
    environment:
      - RABBITMQ_USERNAME=astra_user
      - RABBITMQ_PASSWORD=astra_password
  next_frontend:
    image: 'registry.gitlab.com/devs.stargazer/nzbcloud-environment/images/alpine:latest'
    container_name: next_frontend
    hostname: next_frontend
    env_file: .env
    volumes:
      - './social-network-frontend:/var/www/api'
    build:
      context: .
      dockerfile: ./social-network-frontend/Dockerfile
    ports:
      - '${NEXT_FRONTEND_PORT}:${NEXT_FRONTEND_PORT}'
  messages_db:
    container_name: messages_db
    hostname: '${MESSAGES_DB_HOST}'
    image: 'postgres:12.2-alpine'
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: '${MESSAGES_DB_USER}'
      POSTGRES_PASSWORD: '${MESSAGES_DB_PASSWORD}'
      POSTGRES_DB: '${MESSAGES_DB_NAME}'
      POSTGRES_PORT: '${MESSAGES_DB_PORT}'
      PGDATA: /var/lib/postgresql/data/messages_db_data
    ports:
      - '${MESSAGES_DB_PORT}:${MESSAGES_DB_PORT}'
    command: '-p ${MESSAGES_DB_PORT}'
  posts_db:
    container_name: posts_db
    hostname: '${POSTS_DB_HOST}'
    image: 'postgres:12.2-alpine'
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: '${POSTS_DB_USER}'
      POSTGRES_PASSWORD: '${POSTS_DB_PASSWORD}'
      POSTGRES_DB: '${POSTS_DB_NAME}'
      POSTGRES_PORT: '${POSTS_DB_PORT}'
      PGDATA: /var/lib/postgresql/data/posts_db_data
    ports:
      - '${POSTS_DB_PORT}:${POSTS_DB_PORT}'
    command: '-p ${POSTS_DB_PORT}'
  users_db:
    container_name: users_db
    hostname: '${USERS_DB_HOST}'
    image: 'postgres:12.2-alpine'
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: '${USERS_DB_USER}'
      POSTGRES_PASSWORD: '${USERS_DB_PASSWORD}'
      POSTGRES_DB: '${USERS_DB_NAME}'
      PGPORT: '${USERS_DB_PORT}'
      PGDATA: /var/lib/postgresql/data/users_db_data
    ports:
      - '${USERS_DB_PORT}:${USERS_DB_PORT}'
    command: '-p ${USERS_DB_PORT}'
volumes:
  network_db: null
